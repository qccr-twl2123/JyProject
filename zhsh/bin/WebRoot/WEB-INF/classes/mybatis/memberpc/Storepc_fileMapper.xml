<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Storepc_fileMapper">
	
	 <!-- 通过类别获取商家 -->
	<select id="listAllForCitysort" parameterType="pd" resultType="pd">
		select 
				a.store_id,
				a.store_name,
				a.comment_score,
				a.pictrue_url,
 				b.notice_information ,
 				b.store_introduce ,
 				b.area_name ,
 				c.sort_name as onesortname,
 				d.sort_name as twosortname,
 				e.sort_name as threesortname
		from 
			    tb_store a  join tb_store_file b on a.store_id=b.store_id 
				left join tb_city_file_sort c on b.city_sort_one=c.city_file_sort_id 
				left join tb_city_file_sort d on b.city_sort_two=d.city_file_sort_id 
				left join tb_city_file_sort e on b.city_sort_three=e.city_file_sort_id 
 		where
				a.check_status='1' <!-- 审核通过，开启状态，交过服务费或是交易扣点，正在开启的状态 -->
				and a.merchant_status != '4'
				and b.open_status='1'
				and b.biaozhun_status='1'
				<if test="city_file_sort_id != null and city_file_sort_id != '' ">
				and (c.sort_parent_id=#{city_file_sort_id} or d.sort_parent_id=#{city_file_sort_id} or e.sort_parent_id=#{city_file_sort_id})
				</if>
		order by a.complex_score desc
		limit 0,8
	</select>
  	
  	
  	
	<!-- 商家筛选列表-排序，筛选分类  -->
	<select id="getStorelistPage" parameterType="Page" resultType="pd">
		select
					a.store_name,
					ifnull(a.pictrue_url,"") pictrue_url,	
  					a.comment_score,
  	 				a.transaction_times,
 	 				a.zan_times,
	 				a.sort_score,
  					a.longitude,
					a.latitude ,
					a.store_id,
					a.merchant_level,
					cast((cast(round( 6378.138 * 2 * asin( sqrt( pow( sin(( abs(a.latitude  * pi() / 180 - #{pd.latitude} * pi() / 180) ) / 2 ), 2 ) + cos(a.latitude  * pi() / 180) * cos( #{pd.latitude} * pi() / 180) * pow( sin(( abs(a.longitude * pi() / 180 - #{pd.longitude}  * pi() / 180) ) / 2 ), 2 ))) ,3) as  decimal(10,1))) as char) as distance,
					b.keyword,
					b.area_name ,
					b.notice_information ,
 					b.store_introduce 
		from 
				tb_store a  join tb_store_file b on a.store_id=b.store_id 
				left join tb_city_file_sort c on b.city_sort_one=c.city_file_sort_id 
				left join tb_city_file_sort d on b.city_sort_two=d.city_file_sort_id 
				left join tb_city_file_sort e on b.city_sort_three=e.city_file_sort_id 
		where  
				a.check_status='1' <!-- 审核通过，开启状态，交过服务费或是交易扣点，正在开启的状态 -->
				and a.merchant_status != '4'
				and b.open_status='1'
				and b.biaozhun_status='1'
 				<if test="pd.content != null and pd.content != ''">
				and (
							a.store_name like concat(concat("%",#{pd.content}),"%")
							or
							b.address like concat(concat("%",#{pd.content}),"%")
 				)
				</if>
 				<if test="pd.infor_text != null and pd.infor_text != ''">
				and  a.keyword like concat(concat("%",#{pd.infor_text}),"%")
 				</if>
				<if test="pd.sort_type =='1'.toString()">
					<if test="pd.city_file_sort_id != null and pd.city_file_sort_id != ''">
					and (c.sort_parent_id=#{pd.city_file_sort_id} or d.sort_parent_id=#{pd.city_file_sort_id} or e.sort_parent_id=#{pd.city_file_sort_id})
					</if>
				</if>
				<if test="pd.sort_type =='2'.toString()">
					<if test="pd.city_file_sort_id != null and pd.city_file_sort_id != ''">
					and (b.city_sort_one=#{pd.city_file_sort_id} or b.city_sort_two=#{pd.city_file_sort_id} or b.city_sort_three=#{pd.city_file_sort_id})
					</if>
				</if>
 				<if test="pd.province_name != null and pd.province_name != ''">
				and b.province_name=#{pd.province_name}
				</if>
				<if test="pd.city_name != null and pd.city_name != ''">
				and b.city_name=#{pd.city_name}
				</if>
				<if test="pd.area_name != null and pd.area_name != ''">
				and b.area_name=#{pd.area_name}
				</if>
				<if test="pd.shaixuan !='0'.toString() and pd.shaixuan != null and pd.shaixuan != ''">
				and a.store_id in(
										select 
												m.store_id
										from 
												tb_store_marketing m
										where 
												m.open_status='1'
												and m.isguoqi='0'
												and to_days(now()) &gt;= to_days(m.starttime)
												and to_days(now()) &lt;= to_days(m.endtime)
					 							<choose>
														<when test="pd.shaixuan =='1'.toString()">and m.marketing_type='2'</when>
														<when test="pd.shaixuan =='2'.toString()">and m.marketing_type='7'</when>
														<when test="pd.shaixuan =='3'.toString()">and m.marketing_type='1'</when>
			 									</choose>
								  )
 				</if>
		<choose>
  			<when test="pd.paixu == '2'.toString()">order by round( 6378.138 * 2 * asin( sqrt( pow( sin(( abs(a.latitude  * pi() / 180 - #{pd.latitude} * pi() / 180) ) / 2 ), 2 ) + cos(a.latitude  * pi() / 180) * cos( #{pd.latitude} * pi() / 180) * pow( sin(( abs(a.longitude * pi() / 180 - #{pd.longitude}  * pi() / 180) ) / 2 ), 2 ))) ,3), a.registertime </when>
  			<when test="pd.paixu == '3'.toString()">order by cast(a.comment_score as decimal(10,1) ) desc, a.registertime </when>
 			<when test="pd.paixu == '4'.toString()">order by cast(a.integral_rate as decimal(10,2) ) desc, a.registertime </when>
 			<when test="pd.paixu == '5'.toString()">order by cast(f.ordernumber as signed) desc, a.registertime </when>
 			<otherwise>order by cast(a.complex_score as decimal(10,1) ) desc , a.registertime </otherwise>
 		</choose>
	</select>
	
	
	
	 <!-- 通过类别获取商家 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
				a.store_id,
				a.store_name,
				a.comment_score,
				a.pictrue_url,
 				b.notice_information ,
 				b.store_introduce ,
 				b.area_name ,
 				b.address,
 				b.phone_bymemeber,
 				c.sort_name as onesortname,
 				d.sort_name as twosortname,
 				e.sort_name as threesortname
		from 
			    tb_store a  join tb_store_file b on a.store_id=b.store_id 
				left join tb_city_file_sort c on b.city_sort_one=c.city_file_sort_id 
				left join tb_city_file_sort d on b.city_sort_two=d.city_file_sort_id 
				left join tb_city_file_sort e on b.city_sort_three=e.city_file_sort_id 
 		where
				 a.store_id=#{store_id}
  	</select>
  	
</mapper>