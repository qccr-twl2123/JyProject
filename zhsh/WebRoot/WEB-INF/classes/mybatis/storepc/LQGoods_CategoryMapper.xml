<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="LQGoods_CategoryMapper">

	<!-- 判断类别是否存在当前排序 -->
	<select id="findCaBySort" parameterType="pd" resultType="pd">
		select * from tb_goods_category 
		where 
			store_id=#{store_id} 
			<if test="sort != null and sort !=''">
			and sort=#{sort}
			</if>
			<choose>
				<when test="category_parent_id == '0'.toString()">
					and category_parent_id = '0'
				</when>
				<otherwise>
					and category_parent_id != '0'
				</otherwise>
			</choose>
			and deletestatus='0'
   		limit 1
	</select>
	
	<!-- 根据大类名字找大类 -->
	<select id="findBigIdByName" parameterType="String" resultType="Goods_Category">
		select * from tb_goods_category where name=#{name} and deletestatus='0'
	</select>
	
	<!-- 根据商品名或ID名字找详情 -->
	<select id="findSmallByName" parameterType="String" resultType="pd">
		select * from tb_goods where goods_name=#{goods_name} and deletestatus='0'
	</select>
		
	<!-- 根据小类名字找小类Id -->
	<select id="findSmallIdByName" parameterType="String" resultType="Goods_Category">
		select * from tb_goods_category where name=#{name} and deletestatus='0'
	</select>
	
	<!-- 以下修改过 -->

	<!-- 删除类别 -->
	<update id="deleteCate" parameterType="pd">
	update  tb_goods_category 
	set deletestatus='1'
	where goods_category_id=#{goods_category_id}  
	</update>
	
	<!-- 删除小类别 -->
	<update id="deleteCateXiao" parameterType="pd">
	update  tb_goods_category 
	set deletestatus='1'
	where category_parent_id=#{goods_category_id} 
 	</update>
	
		
	<!-- 删除商品 -->
	<update id="deleteCateXiaoGoods" parameterType="pd">
	update  tb_goods_category 
	set deletestatus='1'
 	where (goods_category_id=#{goods_category_id})
	      or
	      (goods_category_id in ( select goods_category_id from tb_goods_category where  category_parent_id= #{goods_category_id} ))
	</update>
	
	<!-- 统计商品 -->
	<select id="selectCateXiaoGoods" parameterType="pd" resultType="Integer">
	select  count(*)  as number
	from tb_goods  
	
	where 
		  deletestatus='0'
		  and 
		  	(
		  		(goods_category_id=#{goods_category_id})
	      		or
	      		(goods_category_id in ( select goods_category_id from tb_goods_category where  category_parent_id= #{goods_category_id} ))
			)
	</select>

	<!-- 查找大类 -->
	<select id="findAllBig" parameterType="pd" resultType="pd">
		select * 
		from tb_goods_category 
		where category_parent_id = '0' and deletestatus='0'
		<if test="store_id != null and store_id !=''">and  store_id=#{store_id}</if>
		order by sort 
	</select>
 	<!-- 统计大类 -->
	<select id="countBig" parameterType="pd" resultType="String">
		select count(*) 
		from tb_goods_category 
		where 
			category_parent_id = '0'  and deletestatus='0'
			<if test="store_id != null and store_id !=''">and  store_id=#{store_id}</if>
	</select>
	
	<!-- 查找所有小类 -->
	<select id="findAllSmall" parameterType="Page" resultType="pd">
		select * 
		from tb_goods_category 
		where category_parent_id != '0' and deletestatus='0'
			<if test="pd.store_id != null and pd.store_id !=''">and  store_id=#{pd.store_id}</if>
	</select>
	<!-- 查找所有小类 -->
	<select id="findAllSmallListAll" parameterType="pd" resultType="pd">
		select * 
		from tb_goods_category 
		where category_parent_id != '0' and deletestatus='0'
		 <if test="store_id != null and store_id !=''">and  store_id=#{store_id}</if>
	</select>
	<!-- 统计大类下的小类-->
	<select id="countSmall" parameterType="pd" resultType="String">
		select count(*) 
		from tb_goods_category 
		where 
			category_parent_id != '0' and deletestatus='0'
			<if test="store_id != null and store_id !=''">and  store_id=#{store_id}</if>
			<if test="category_parent_id != null and category_parent_id !=''">and  category_parent_id=#{category_parent_id}</if>
	</select>
	<!-- 产看分类的详情-->
	<select id="findByCateId" parameterType="pd" resultType="pd">
		select a.*,b.goods_category_id as parent_id ,b.name as parent_name
		from tb_goods_category a left join tb_goods_category b on a.category_parent_id=b.goods_category_id
		where 
			a.goods_category_id = #{goods_category_id}
			and a.deletestatus='0'
 	</select>
	<!-- 修改 -->
	<update id="editCate" parameterType="pd">
			update  tb_goods_category
			set 
				name = #{name},
				category_parent_id = #{category_parent_id},
				sort = #{sort},
				goods_category_id = goods_category_id
			where 
				goods_category_id = #{goods_category_id}
	</update>
	<!-- 新增大类 -->
	<insert id="addBig" parameterType="pd">
		insert into tb_goods_category(
			name,
			category_parent_id,
			sort,
			goods_category_id,
			store_id,
			createdate
		) values (
			#{name},
			#{category_parent_id},
			#{sort},
			#{goods_category_id},
			#{store_id},
			now()
		)
	</insert>
	
	<!-- 新增小类 -->
	<insert id="addSmall" parameterType="pd">
		insert into tb_goods_category(
			name,
			category_parent_id,
			sort,
			goods_category_id,
			store_id,
			createdate
		) values (
			#{name},
			#{category_parent_id},
			#{sort},
			#{goods_category_id},
			#{store_id},
			now()
		)
	</insert>
	
	<!-- 新增今日特价 -->
	<insert id="savetejia" parameterType="pd">
		insert into tb_goods_tj(
			goods_tj_id,
			goods_id,
			store_id,
			createdate
		) values (
			#{goods_tj_id},
			#{goods_id},
			#{store_id},
			now()
		)
	</insert>
	
	
	<!-- 新增人气榜 -->
	<insert id="saverenqi" parameterType="pd">
		insert into tb_goods_rq(
			goods_rq_id,
			goods_id,
			store_id,
			createdate
		) values (
			#{goods_tj_id},
			#{goods_id},
			#{store_id},
			now()
		)
	</insert>
	
	<select id="findRenqi" parameterType="pd" resultType="pd">
		select * from tb_goods_rq where goods_id = #{goods_id}
	</select>
	
	<select id="findTejia" parameterType="pd" resultType="pd">
		select * from tb_goods_tj where goods_id = #{goods_id} 
	</select>
 
	<!-- 查找大类对应的小类-->
	<select id="findAllSmalllistPage" parameterType="Page" resultType="pd">
		select
 			b.sort as parent_sort,
			b.`name` as parent_name,
			c.goods_category_id ,
			c.category_parent_id,
			c.sort ,
			c.`name` ,
			c.store_id
		from 
			tb_goods_category c 
			right join (select a.goods_category_id,a.`name`,a.sort from tb_goods_category a where a.category_parent_id='0' and a.deletestatus='0') b  on c.category_parent_id=b.goods_category_id
		where 
				c.store_id=#{pd.store_id}
				and c.deletestatus='0'
 	    order by c.category_parent_id desc
 	</select> 
	
	<!-- 查找大类对应的小类的商品的详细信息 -->
	<select id="findEachlistPage" parameterType="Page" resultType="pd">
			select 
					a.sort as parent_sort,
					a.name as parent_name,
			      	b.name as son_name,
					c.*
			from 
					tb_goods_category a 
					right  join tb_goods_category b on a.category_parent_id='0' and a.goods_category_id=b.category_parent_id 
					right  join tb_goods c on c.goods_category_id=b.goods_category_id
 			where
					c.store_id=#{pd.store_id}
					and a.deletestatus='0'
					and b.deletestatus='0'
					and c.deletestatus='0'
					<if test="pd.goods_name  != null and pd.goods_name != ''">
					and (	c.goods_name like CONCAT(CONCAT("%",#{pd.goods_name}),"%") 
							or CONCAT(CONCAT("%",c.goods_name),"%") like  #{pd.goods_name}
							or a.name like CONCAT(CONCAT("%",#{pd.goods_name}),"%") 
							or CONCAT(CONCAT("%",a.name),"%") like  #{pd.goods_name}
							or b.name like CONCAT(CONCAT("%",#{pd.goods_name}),"%") 
							or CONCAT(CONCAT("%",b.name),"%") like  #{pd.goods_name}
						)
					</if>
					<if test="pd.starttime != null and pd.starttime != '' ">
					and c.starttime  &gt;= #{pd.starttime}
					</if>
					<if test="pd.endtime != null and pd.endtime != '' ">
					and c.endtime  &lt; #{pd.endtime}
					</if>
					<choose>
						<!-- 大类排序 --><when test="pd.paixu_w =='2'.toString() ">order by a.sort , c.createdate desc</when>
						<!-- 销售排序 --><when test="pd.paixu_w =='1'.toString()">order by  cast(c.consumption_number as signed) desc, c.createdate desc</when>
						<!-- 创建时间排序 --><otherwise>order by c.createdate desc</otherwise>
					</choose>		 
	</select>
	
	<select id="renqilistPage" parameterType="Page" resultType="pd">
			select 
					a.sort as parent_sort,
					a.name as parent_name,
			   		b.name as son_name,
					c.goods_name,
					c.market_money,
					c.retail_money,
					c.integral_number,
					c.integral_rate,
					c.promotion_type,
					c.company,
					d.goods_rq_id,d.createdate
			from 
 					tb_goods_category a 
					right  join tb_goods_category b on a.category_parent_id='0' and a.goods_category_id=b.category_parent_id 
					right  join tb_goods c on c.goods_category_id=b.goods_category_id
          			right  join tb_goods_rq d on d.goods_id=c.goods_id 
			where 
					a.deletestatus='0'
					and b.deletestatus='0'
					and c.deletestatus='0'
					and d.store_id = #{pd.store_id}
					<if test="pd.starttime != null and pd.starttime != '' ">
						and d.createdate  &gt;= #{pd.starttime}
					</if>
					<if test="pd.endtime != null and pd.endtime != '' ">
						and d.createdate  &lt; #{pd.endtime}
					</if>
					order by d.createdate desc
	</select>
	
	<select id="tejialistPage" parameterType="Page" resultType="pd">
			select 
					a.sort as parent_sort,
					a.name as parent_name,
			   		b.name as son_name,
					c.goods_name,
					c.market_money,
					c.retail_money,
					c.integral_number,
					c.integral_rate,
					c.promotion_type,
					c.company,
					d.goods_tj_id,d.createdate
			from 
 					tb_goods_category a 
					right  join tb_goods_category b on a.category_parent_id='0' and a.goods_category_id=b.category_parent_id 
					right  join tb_goods c on c.goods_category_id=b.goods_category_id
          			right  join tb_goods_tj d on d.goods_id=c.goods_id 
			where 
					a.deletestatus='0'
					and b.deletestatus='0'
					and c.deletestatus='0'
					and d.store_id = #{pd.store_id}
					<if test="pd.starttime != null and pd.starttime != '' ">
						and d.createdate  &gt;= #{pd.starttime}
					</if>
					<if test="pd.endtime != null and pd.endtime != '' ">
						and d.createdate  &lt; #{pd.endtime}
					</if>
					order by d.createdate DESC
	</select>

	<select  id="countRenqi" parameterType="pd" resultType="String">
		select count(*) from tb_goods_rq a
		where a.store_id = #{store_id}
	</select>
	
	<select  id="countTejia" parameterType="pd" resultType="String">
		select count(*) from tb_goods_tj a 
		where a.store_id = #{store_id}
	</select>
	
	
	<!-- 获取所有的商品 -->
	<select id="findEachAllGoods" parameterType="pd" resultType="pd">
			select 
					a.back_rate,
					c.*
			from 
 					tb_goods_category a 
					right  join tb_goods_category b on a.category_parent_id='0' and a.goods_category_id=b.category_parent_id 
					right  join tb_goods c on c.goods_category_id=b.goods_category_id 
 			where
					a.deletestatus='0'
					and b.deletestatus='0'
					and c.deletestatus='0'
					and c.store_id=#{store_id}
					<if test="ww_goods_category_id != null and ww_goods_category_id != ''">
					and a.goods_category_id=#{ww_goods_category_id}
					</if>
			order
 	</select>
	
	<!-- 获取小类列表-->
	<select id="findCateListById" parameterType="pd" resultType="pd">
		select *
		from tb_goods_category 
		where 
			category_parent_id = #{category_parent_id} and store_id=#{store_id} and deletestatus='0'
		order by sort 
 	</select>
 	
 	
 	<!-- 商品的详细信息 -->
	<select id="findGoodsById" parameterType="pd" resultType="pd">
			select 
					a.sort,
					a.goods_category_id as parent_id,
					a.name as parent_name,
					b.goods_category_id as son_id,
			      	b.name as son_name,
					c.*
			from 
					tb_goods_category a 
					right  join tb_goods_category b on a.category_parent_id='0' and a.goods_category_id=b.category_parent_id 
					right  join tb_goods c on c.goods_category_id=b.goods_category_id
 			where
 					c.goods_id=#{goods_id}
 					and a.deletestatus='0'
 					and b.deletestatus='0'
 					and c.deletestatus='0'
  			order by a.sort
	</select>
	
	
	<!-- 修改小类的积分率或折扣率 -->
	<update id="editRate" parameterType="pd">
			update  tb_goods_category
			set 
				<if test="back_rate != null and back_rate != ''">back_rate=#{back_rate},</if>
				<if test="zk_rate != null and zk_rate != ''">zk_rate=#{zk_rate},</if>
 				goods_category_id = goods_category_id
			where 
				goods_category_id = #{goods_category_id}
	</update>

	
	<!-- -以上修改过 -->
	
	<select id="findAllEach" parameterType="Page" resultType="pd">
		select 
			concat(b.parent_id), b.parent_name, concat(b.parent_sort), concat(b.son_id), b.son_name,
			concat(t.goods_id),
			t.goods_category_id,
			t.goods_name,
			t.market_money,
			t.retail_money,
			t.integral_rate,
			concat(t.stock_number),
			concat(t.consumption_number),
			t.goods_status,
			t.sales_status,
			date_format(t.starttime,'%Y-%m-%d'),
			date_format(t.endtime,'%Y-%m-%d'),
			promotion_type
		from 
			tb_record b, tb_goods t 
		where 
			b.son_id = t.goods_category_id
			and t.deletestatus='0'
	</select>
	
	<!-- 销售排序 刘耀耀 2016.07.14-->
	<select id="findSortByConlistPage" parameterType="Page" resultType="pd">
			select 
					a.sort as parent_sort,
					a.name as parent_name,
			      	b.name as son_name,
					c.*
			from 
					tb_goods_category a 
					right  join tb_goods_category b on a.category_parent_id='0' and a.goods_category_id=b.category_parent_id 
					right  join tb_goods c on c.goods_category_id=b.goods_category_id
 			where
					a.deletestatus='0' 
					and b.deletestatus='0' 
					and c.deletestatus='0'
					and c.store_id=#{pd.store_id}
 			order by cast(c.consumption_number as signed) desc
	</select>
	
	<select id="findSortByStolistPage" parameterType="Page" resultType="pd">
		SELECT b.*, t.* 
		from tb_record b, tb_goods t 
		where b.son_id = t.goods_category_id  and t.deletestatus='0'
		order by t.stock_number
	</select>
	
	
	<!-- 大类排序 -->
	<select id="findSortBySorlistPage" parameterType="Page" resultType="pd">
				select 
					a.sort as parent_sort,
					a.name as parent_name,
			      	b.name as son_name,
					c.*
			from 
					tb_goods_category a 
					right  join tb_goods_category b on a.category_parent_id='0' and a.goods_category_id=b.category_parent_id 
					right  join tb_goods c on c.goods_category_id=b.goods_category_id
 			where
					a.deletestatus='0' 
					and b.deletestatus='0'
					and c.deletestatus='0'
					and c.store_id=#{pd.store_id}
 			order by cast(a.sort as signed)  
	</select>
	
	<!-- 根据时间查询 -->
	<select id="findGoodsByTimelistPage" parameterType="Page" resultType="pd">
		select
				b.name as xname, 
				a.market_money,
				a.retail_money,
				a.integral_rate,
				a.consumption_number,
				a.stock_number,
				a.goods_status,
				a.goods_name,
				a.goods_id,
				c.name as dname
			from
				tb_goods a 
				left join tb_goods_category b on a.goods_category_id=b.goods_category_id
				left join tb_goods_category c on b.category_parent_id=c.goods_category_id
			where
				a.deletestatus='0' 
				and b.deletestatus='0'
				and c.deletestatus='0'
				and b.goods_category_id = a.goods_category_id
				and a.store_id=#{pd.store_id}
				<if test="pd.starttime != null and pd.starttime != '' ">
				and a.starttime  &gt;= #{pd.starttime}
				</if>
				<if test="pd.endtime != null and pd.endtime != '' ">
				and a.endtime  &lt; #{pd.endtime}
				</if>
	</select>

	

	<!-- 新增商品  
	<insert id="addSmall" parameterType="pd">
		insert into tb_goods(
			goods_category_id,
			goods_name,
			image_url,
			market_money,
			retail_money,
			integral_rate,
			stock_number,
			consumption_number,
			goods_status,
			sales_status,
			starttime,
			endtime,
			promotion_type,
			goods_id
		) values (
			#{goods_category_id},
			#{goods_name},
			#{image_url},
			#{market_money},
			#{retail_money},
			#{integral_rate},
			#{stock_number},
			#{consumption_number},
			#{goods_status},
			#{sales_status},
			#{starttime},
			#{endtime},
			#{promotion_type},
			#{goods_id}
		)
 	</insert>-->

	<!-- 删除 -->
	<delete id="delete" parameterType="pd">
		delete from TB_MEMBER
		where
		member_id = #{member_id}
	</delete>
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update TB_MEMBER
		set
		image_url =
		#{image_url},
		name = #{name},
		phone = #{phone},
		vip_level = #{vip_level},
		charm_number = #{charm_number},
		now_money = #{now_money},
		now_integral =
		#{now_integral},
		member_id = member_id
		where
		member_id = #{member_id}
	</update>
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
		image_url,
		name,
		phone,
		vip_level,
		charm_number,
		now_money,
		now_integral,
		member_id
		from
		TB_MEMBER
		where
		member_id = #{member_id}
	</select>


	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		a.image_url,
		a.sex,
		a.wechat_number,
		a.recommended,
		a.recommended_type,
		a.status,
		a.name,
		a.phone,
		a.province_name,
		a.city_name,
		a.area_name,
		a.money_pay_number,
		a.wechat_pay_number,
		a.alipay_pay_number,
		a.bank_pay_number,
		a.apple_pay_number,
		a.integral_pay_number,
		a.consumption,
		a.vip_level,
		a.charm_number,
		a.now_money,
		a.now_integral,
		a.createdate,
		a.member_id
		from
		TB_MEMBER a
		where 1=1
		<if test="pd.content != null and pd.content != ''"><!-- 关键词检索 -->
			and
			(
			a.name like CONCAT(CONCAT("%",#{pd.content}),"%")
			or
			a.phone like
			CONCAT(CONCAT("%",#{pd.content}),"%")
			)
		</if>
		<if test="pd.province_name != null and pd.province_name != ''"><!-- 省 -->
			and
			(
			a.province_name=#{pd.province_name}
			)
		</if>
		<if test="pd.city_name != null and pd.city_name != ''"><!-- 市 -->
			and
			(
			a.city_name=#{pd.city_name}
			)
		</if>
		<if test="pd.area_name != null and pd.area_name != ''"><!-- 区 -->
			and
			(
			a.area_name=#{pd.area_name}
			)
		</if>
	</select>

	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		a.*
		from
		TB_MEMBER a
	</select>

	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from TB_MEMBER
		where
		member_id in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 通过ID获取数据魏汉文20160608 -->
	<select id="detailById" parameterType="pd" resultType="pd">
		select
		name,
		phone,
		member_id
		from
		TB_MEMBER
		where
		member_id = #{member_id}
	</select>

	<!-- 通过手机号码获取会员信息 -->
	<select id="listAllByPhone" parameterType="pd" resultType="pd">
		select
		name,
		phone,
		member_id
		from
		tb_member
		where
		phone = #{phone}
	</select>
	
	<!-- 导出 -->
	<select id="excelListAll" parameterType="pd" resultType="GoodsAndCate">
			select 
					a.sort as parent_sort,
					a.goods_category_id as parent_id,
					a.name as parent_name,
					b.goods_category_id as son_id,
					b.name as son_name,
					c.*
			from 
					tb_goods_category a 
					right  join tb_goods_category b on a.category_parent_id='0' and a.goods_category_id=b.category_parent_id 
					right  join tb_goods c on c.goods_category_id=b.goods_category_id
 			where
					a.deletestatus='0' 
					and b.deletestatus='0'
					and c.deletestatus='0'
					and c.store_id=#{store_id}
	</select>

</mapper>