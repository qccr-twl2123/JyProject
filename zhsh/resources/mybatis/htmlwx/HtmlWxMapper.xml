<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="HtmlWxMapper">	
	 
	 
	<!-- 所有商家位置列表魏汉文20160621 20160623-->
	<select id="getStorelistPage" parameterType="page" resultType="pd">
		select
					a.only_store_id,
					a.store_name,
					ifnull(a.pictrue_url,"") pictrue_url,	
					a.integral_rate,
					a.complex_score,
					a.comment_score,
 	 				ifnull(cast(f.ordernumber as char) , '0') as transaction_times,
 	 				a.zan_times,
	 				a.sort_score,
 					a.check_status,		
 					a.longitude,
					a.latitude ,
					a.store_id,
					cast((cast(round( 6378.138 * 2 * asin( sqrt( pow( sin(( abs(a.latitude  * pi() / 180 - #{pd.latitude} * pi() / 180) ) / 2 ), 2 ) + cos(a.latitude  * pi() / 180) * cos( #{pd.latitude} * pi() / 180) * pow( sin(( abs(a.longitude * pi() / 180 - #{pd.longitude}  * pi() / 180) ) / 2 ), 2 ))) ,3) as  decimal(10,1))) as char) as distance,
 					a.merchant_level
		from 
					tb_store a 
					left join tb_store_file b on a.store_id=b.store_id 
					left join tb_city_file_sort c on b.city_sort_one=c.city_file_sort_id 
					left join tb_city_file_sort d on b.city_sort_two=d.city_file_sort_id 
					left join tb_city_file_sort e on b.city_sort_three=e.city_file_sort_id 
					left join (select  count(*) as ordernumber , store_id  from  tb_store_wealthhistory where  profit_type='3' and process_status='1' GROUP BY store_id )  as f on a.store_id=f.store_id 
		where  
					a.check_status='1'
					and a.merchant_status != '4'
					and b.open_status='1'
					and b.biaozhun_status='1'
	  				<if test="pd.content != null and pd.content != ''">
					and (
								a.store_name like CONCAT(CONCAT("%",#{pd.content}),"%")
								or
								b.address like CONCAT(CONCAT("%",#{pd.content}),"%")
					)
					</if>
					<if test="pd.sort_type != null and pd.sort_type != '' and pd.city_file_sort_id != null and pd.city_file_sort_id != ''  ">
						<if test="pd.sort_type =='1'.toString()">
						and (c.sort_parent_id=#{pd.city_file_sort_id} or d.sort_parent_id=#{pd.city_file_sort_id} or e.sort_parent_id=#{pd.city_file_sort_id})
						</if>
						<if test="pd.sort_type =='2'.toString()">
						and (b.city_sort_one=#{pd.city_file_sort_id} or b.city_sort_two=#{pd.city_file_sort_id} or b.city_sort_three=#{pd.city_file_sort_id})
						</if>
					</if>
 	 				<if test="pd.province_name != null and pd.province_name != ''">
					and b.province_name=#{pd.province_name}
					</if>
					<if test="pd.city_name != null and pd.city_name != ''">
					and b.city_name=#{pd.city_name}
					</if>
					<if test="pd.area_name != null and pd.area_name != ''">
					and b.area_name=#{pd.area_name}
					</if>
					<if test="pd.shaixuan != null and pd.shaixuan != '' and pd.shaixuan !='0'.toString()  ">
					and a.store_id in(
									select 
											m.store_id
									from 
											tb_store_marketing m
									where 
											m.open_status='1'
											and m.isguoqi='0'
											<choose>
												<when test="pd.shaixuan =='1'.toString()">and m.marketing_type='2'</when>
												<when test="pd.shaixuan =='2'.toString()">and m.marketing_type='7'</when>
												<when test="pd.shaixuan =='3'.toString()">and m.marketing_type='1'</when>
	 										</choose>
	 							)
	 				</if>
 		<choose>
  			<when test="pd.paixu == '2'.toString()">order by round( 6378.138 * 2 * asin( sqrt( pow( sin(( abs(a.latitude  * pi() / 180 - #{pd.latitude} * pi() / 180) ) / 2 ), 2 ) + cos(a.latitude  * pi() / 180) * cos( #{pd.latitude} * pi() / 180) * pow( sin(( abs(a.longitude * pi() / 180 - #{pd.longitude}  * pi() / 180) ) / 2 ), 2 ))) ,3), a.registertime </when>
  			<when test="pd.paixu == '3'.toString()">order by cast(a.comment_score as decimal(10,1) ) desc, a.registertime </when>
 			<when test="pd.paixu == '4'.toString()">order by cast(a.integral_rate as decimal(10,2) ) desc, a.registertime </when>
 			<when test="pd.paixu == '5'.toString()">order by cast(f.ordernumber as signed) desc, a.registertime </when>
 			<otherwise>order by cast(a.complex_score as decimal(10,1) ) desc , a.registertime </otherwise>
 		</choose>
 	</select>
	
	
	
	
</mapper>